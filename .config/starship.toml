format = '''
╭\[$directory\](${custom.conda-env-available})$conda$git_branch$git_status(
├\($python$golang$c$dotnet$rust$elixir$java$nodejs${custom.docker}\))
╰($container)─➤ 
'''
add_newline = false
continuation_prompt = '  ➤ '

[directory]
format ='[$path]($style)[$read_only]($read_only_style)'
truncate_to_repo = false
read_only='🔒'
read_only_style='red'

[conda]
format = '\([$environment]($style)\)'
# style = 'white'

[container]
format = '[\($symbol \[$name\]]($style)\)'
symbol=''
style='bold blue dimmed'

[dotnet]
format = '[$symbol( $version)( 🎯 $tfm)]($style) '
symbol=''
style='fg:#876CE2'

[c]
format = '[$symbol( $version(-$name))]($style)'
symbol = ''
style = 'blue'

[python]
format = '[$symbol$version]($style)'
symbol = ' '
style = 'yellow'

[golang]
format = '[$symbol($version)]($style)'
symbol = '󰟓 '

[rust]
format = '[$symbol ($version)]($style)'
symbol = ''
style = 'fg:#FF7047'

[elixir]
format = '[$symbol ($version \(OTP $otp_version\))]($style)'
symbol=''

[java]
format = '[${symbol} (${version})]($style)'
symbol = ''
style='fg:#EA2D2E'

[nodejs]
format = '[$symbol $version]($style)'
symbol = '󰎙'

[custom.docker]
format = ' [󰡨]($style)'
detect_files=['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']
style ='blue bold'

[custom.conda-env-available]
format='\([]($style)\)'
when='can_activate'
style='bold green'

[git_branch]
format=' on [$symbol$branch(:$remote_branch)]($style)'

[git_status]
format=' ([\[ $all_status$ahead_behind\]]($style) )'
diverged='󰙅'
conflicted='{count}󰮘 '
modified='${count}󱇧 '
untracked='${count}󰷊 '
deleted='${count} '
staged='${count}󰈖 '
